"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class ZcmOrientusAccuracy(object):
    __slots__ = ["stdRoll", "stdPitch", "stdHeading", "stdQ0", "stdQ1", "stdQ2", "stdQ3"]

    def __init__(self):
        self.stdRoll = 0.0
        self.stdPitch = 0.0
        self.stdHeading = 0.0
        self.stdQ0 = 0.0
        self.stdQ1 = 0.0
        self.stdQ2 = 0.0
        self.stdQ3 = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmOrientusAccuracy._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">fffffff", self.stdRoll, self.stdPitch, self.stdHeading, self.stdQ0, self.stdQ1, self.stdQ2, self.stdQ3))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmOrientusAccuracy._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmOrientusAccuracy._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmOrientusAccuracy()
        self.stdRoll, self.stdPitch, self.stdHeading, self.stdQ0, self.stdQ1, self.stdQ2, self.stdQ3 = struct.unpack(">fffffff", buf.read(28))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmOrientusAccuracy in parents: return 0
        tmphash = (0xdbf4f5a8a94ce6ee) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmOrientusAccuracy._packed_fingerprint is None:
            ZcmOrientusAccuracy._packed_fingerprint = struct.pack(">Q", ZcmOrientusAccuracy._get_hash_recursive([]))
        return ZcmOrientusAccuracy._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)


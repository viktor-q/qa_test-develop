"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class ZcmOrientusFilterStatus(object):
    __slots__ = ["orientationFilterInitialised", "headingInitialised", "magnetometersEnabled", "velocityHeadingEnabled", "externalPositionActive", "externalVelocityActive", "externalHeadingActive"]

    def __init__(self):
        self.orientationFilterInitialised = False
        self.headingInitialised = False
        self.magnetometersEnabled = False
        self.velocityHeadingEnabled = False
        self.externalPositionActive = False
        self.externalVelocityActive = False
        self.externalHeadingActive = False

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmOrientusFilterStatus._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bbbbbbb", self.orientationFilterInitialised, self.headingInitialised, self.magnetometersEnabled, self.velocityHeadingEnabled, self.externalPositionActive, self.externalVelocityActive, self.externalHeadingActive))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmOrientusFilterStatus._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmOrientusFilterStatus._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmOrientusFilterStatus()
        self.orientationFilterInitialised = bool(struct.unpack('b', buf.read(1))[0])
        self.headingInitialised = bool(struct.unpack('b', buf.read(1))[0])
        self.magnetometersEnabled = bool(struct.unpack('b', buf.read(1))[0])
        self.velocityHeadingEnabled = bool(struct.unpack('b', buf.read(1))[0])
        self.externalPositionActive = bool(struct.unpack('b', buf.read(1))[0])
        self.externalVelocityActive = bool(struct.unpack('b', buf.read(1))[0])
        self.externalHeadingActive = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmOrientusFilterStatus in parents: return 0
        tmphash = (0x7ac33f9520d9da65) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmOrientusFilterStatus._packed_fingerprint is None:
            ZcmOrientusFilterStatus._packed_fingerprint = struct.pack(">Q", ZcmOrientusFilterStatus._get_hash_recursive([]))
        return ZcmOrientusFilterStatus._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

